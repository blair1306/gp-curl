<dec f='codebrowser/lib/strerror.h' l='27' type='const char * Curl_strerror(struct connectdata * conn, int err)'/>
<use f='codebrowser/lib/asyn-thread.c' l='668' u='c' c='Curl_resolver_getaddrinfo'/>
<use f='codebrowser/lib/asyn-thread.c' l='673' u='c' c='Curl_resolver_getaddrinfo'/>
<use f='codebrowser/lib/connect.c' l='326' u='c' c='bindlocal'/>
<use f='codebrowser/lib/connect.c' l='441' u='c' c='bindlocal'/>
<use f='codebrowser/lib/connect.c' l='466' u='c' c='bindlocal'/>
<use f='codebrowser/lib/connect.c' l='680' u='c' c='Curl_updateconninfo'/>
<use f='codebrowser/lib/connect.c' l='689' u='c' c='Curl_updateconninfo'/>
<use f='codebrowser/lib/connect.c' l='696' u='c' c='Curl_updateconninfo'/>
<use f='codebrowser/lib/connect.c' l='704' u='c' c='Curl_updateconninfo'/>
<use f='codebrowser/lib/connect.c' l='827' u='c' c='Curl_is_connected'/>
<use f='codebrowser/lib/connect.c' l='864' u='c' c='Curl_is_connected'/>
<use f='codebrowser/lib/connect.c' l='886' u='c' c='Curl_tcpnodelay'/>
<use f='codebrowser/lib/connect.c' l='996' u='c' c='singleipconnect'/>
<use f='codebrowser/lib/connect.c' l='1123' u='c' c='singleipconnect'/>
<use f='codebrowser/lib/ftp.c' l='1068' u='c' c='ftp_state_use_port'/>
<use f='codebrowser/lib/ftp.c' l='1121' u='c' c='ftp_state_use_port'/>
<use f='codebrowser/lib/ftp.c' l='1147' u='c' c='ftp_state_use_port'/>
<use f='codebrowser/lib/ftp.c' l='1152' u='c' c='ftp_state_use_port'/>
<use f='codebrowser/lib/ftp.c' l='1162' u='c' c='ftp_state_use_port'/>
<use f='codebrowser/lib/ftp.c' l='1185' u='c' c='ftp_state_use_port'/>
<use f='codebrowser/lib/ftp.c' l='1193' u='c' c='ftp_state_use_port'/>
<use f='codebrowser/lib/sendf.c' l='395' u='c' c='Curl_send_plain'/>
<use f='codebrowser/lib/sendf.c' l='460' u='c' c='Curl_recv_plain'/>
<def f='codebrowser/lib/strerror.c' l='646' ll='754' type='const char * Curl_strerror(struct connectdata * conn, int err)'/>
<doc f='codebrowser/lib/strerror.c' l='635'>/*
 * Our thread-safe and smart strerror() replacement.
 *
 * The &apos;err&apos; argument passed in to this function MUST be a true errno number
 * as reported on this system. We do no range checking on the number before
 * we pass it to the &quot;number-to-message&quot; conversion function and there might
 * be systems that don&apos;t do proper range checking in there themselves.
 *
 * We don&apos;t do range checking (on systems other than Windows) since there is
 * no good reliable and portable way to do it.
 */</doc>
<use f='codebrowser/lib/tftp.c' l='543' u='c' c='tftp_send_first'/>
<use f='codebrowser/lib/tftp.c' l='625' u='c' c='tftp_rx'/>
<use f='codebrowser/lib/tftp.c' l='650' u='c' c='tftp_rx'/>
<use f='codebrowser/lib/tftp.c' l='676' u='c' c='tftp_rx'/>
<use f='codebrowser/lib/tftp.c' l='751' u='c' c='tftp_tx'/>
<use f='codebrowser/lib/tftp.c' l='795' u='c' c='tftp_tx'/>
<use f='codebrowser/lib/tftp.c' l='821' u='c' c='tftp_tx'/>
<use f='codebrowser/lib/tftp.c' l='1035' u='c' c='tftp_connect'/>
<use f='codebrowser/lib/tftp.c' l='1253' u='c' c='tftp_multi_statemach'/>
